[{"/home/alipw/Documents/ukk/spp-12/client/src/index.js":"1","/home/alipw/Documents/ukk/spp-12/client/src/pages/LoginSiswa.js":"2","/home/alipw/Documents/ukk/spp-12/client/src/pages/LoginAdmin.js":"3","/home/alipw/Documents/ukk/spp-12/client/src/pages/HomePetugas.js":"4","/home/alipw/Documents/ukk/spp-12/client/src/pages/Tes.js":"5","/home/alipw/Documents/ukk/spp-12/client/src/pages/History.js":"6","/home/alipw/Documents/ukk/spp-12/client/src/pages/HomeAdmin.js":"7"},{"size":996,"mtime":1634259445342,"results":"8","hashOfConfig":"9"},{"size":2118,"mtime":1634262123705,"results":"10","hashOfConfig":"9"},{"size":4707,"mtime":1634262111854,"results":"11","hashOfConfig":"9"},{"size":7900,"mtime":1634259445342,"results":"12","hashOfConfig":"9"},{"size":3445,"mtime":1634259445342,"results":"13","hashOfConfig":"9"},{"size":6269,"mtime":1634262432587,"results":"14","hashOfConfig":"9"},{"size":12310,"mtime":1634259445342,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"qyh05n",{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"19"},"/home/alipw/Documents/ukk/spp-12/client/src/index.js",["35","36"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useHistory,\n} from \"react-router-dom\";\nimport LoginAdmin from \"./pages/LoginAdmin.js\";\nimport LoginSiswa from \"./pages/LoginSiswa.js\";\nimport Home from \"./pages/HomeAdmin.js\";\nimport HomePetugas from \"./pages/HomePetugas.js\";\nimport Tes from \"./pages/Tes.js\"\nimport History from \"./pages/History.js\"\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/loginAdmin\" component={LoginAdmin} />\n                <Route path=\"/LoginSiswa\" component={LoginSiswa} />\n                <Route path=\"/HomeAdmin\" component={Home} />\n                <Route path=\"/homepetugas\" component={HomePetugas} />\n                <Route path=\"/tes\" component={Tes} />\n                <Route path=\"/History\" component={History} />\n            </Switch>\n        </Router>\n    );\n}\n\nReactDOM.render(<App />, document.getElementById(\"app\"));\n",["37","38"],"/home/alipw/Documents/ukk/spp-12/client/src/pages/LoginSiswa.js",["39","40","41"],"/home/alipw/Documents/ukk/spp-12/client/src/pages/LoginAdmin.js",["42","43"],"/home/alipw/Documents/ukk/spp-12/client/src/pages/HomePetugas.js",["44","45","46","47","48","49","50","51","52"],"import React, { useState, useEffect } from \"react\";\nimport \"../styles/style.css\";\nimport { Redirect, useHistory, Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default function History() {\n    const [dbData, setData] = useState({});\n    const [message, setMessage] = useState(\"\");\n    const [tableData,setTableData] = useState({})\n    const [referenceData, setReferenceData] = useState({})\n    const [formData, setFormData] = useState({})\n    const [update,setUpdate] = useState(true)\n    const [tableName,setTableName] = useState(\"pembayaran\")\n\n\n    let history = useHistory();\n\n    useEffect(fetchTableData, []);\n    useEffect(makeNull, [tableData]);\n\n    useEffect(initialize, [update], []);\n\n\n    function fetchTableData() {\n        const token = localStorage.getItem(\"token\");\n        axios({\n            method: \"get\",\n            url: \"http://localhost:3001/api/petugas/crud/tableinfo/pembayaran\",\n            headers: { Authorization: `Bearer ${token}` },\n        })\n            .then((response) => {\n                setReferenceData(response.data.reference_ids);\n                delete response.data[\"reference_ids\"];\n                setTableData(response.data);\n            })\n            .catch((error) => {\n                setMessage(error.message)\n                console.log(error);\n            });\n\t}\n\t\n\tfunction sendData() {\n        if(Object.keys(formData).length != Object.keys(tableData).length){\n            setMessage(\"data Incomplete\")\n            console.log(formData)\n        }\n        else{\n            const token = localStorage.getItem(\"token\");\n            axios({\n                method: \"post\",\n                data: formData,\n                url: \"http://localhost:3001/api/petugas/crud/pembayaran\" ,\n                headers: { Authorization: `Bearer ${token}` },\n            })\n                .then((response) => {\n                    makeNull()\n                    setMessage('')\n                    setUpdate(!update)\n                })\n                .catch((error) => {\n                    if(error.response){\n                        setMessage(error.response.data)\n                        console.log(\"error : \", error.response)\n                    }\n                });\n            }\n    }\n\n    function makeNull() {\n        Object.keys(tableData).map((key) => {\n\t\t\tif(tableData[key].references) {\n                formData[key] = referenceData[tableData[key].references.model][0];\n            }\n\t\t\telse formData[key] = \"\";\n        });\n        setFormData({ ...formData });\n        console.log(formData)\n    }\n\n    function form() {\n        var form = \" \";\n            try{\n                form = (\n                    <div className=\"form-group col-sm-5\">\n                        {Object.keys(tableData).map((key) => (\n                            <>\n                                <label> {key}</label>\n                                {tableData[key].references ? (\n                                    <select\n                                        onChange={(ev) => {\n                                            formData[key] = ev.target.value;\n                                            setFormData({ ...formData });\n                                        }}\n                                        value={formData[key]}\n                                        className=\"form-control\"\n                                    >\n                                        {referenceData[\n                                            tableData[key].references.model\n                                        ].map((value) => (\n                                            <option>{value}</option>\n                                        ))}\n                                    </select>\n                                ) : (\n                                    <input\n                                        type=\"text\"\n                                        onChange={(ev) => {\n                                            formData[key] = ev.target.value;\n                                            setFormData({ ...formData});\n                                        }}\n                                        value={formData[key]}\n                                        className=\"form-control\"\n                                    ></input>\n                                )}\n                            </>\n                        ))}\n                        <br />\n                        <button className=\"btn btn-primary\" onClick={sendData}>\n                            Insert\n                        </button>\n                    </div>\n                );\n            }catch(error){\n               return(<h1>an error has occured</h1>)\n            }\n\n        return form;\n    }\n\n    function initialize() {\n        if (!localStorage.getItem(\"token\")) {\n            localStorage.clear();\n            history.push(\"/loginadmin\");\n        }\n        const token = localStorage.getItem(\"token\");\n        axios({\n            method: \"get\",\n            url: \"http://localhost:3001/api/petugas/history/history/history\" ,\n            headers: { Authorization: `Bearer ${token}` },\n        })\n            .then((response) => {\n                setData(response.data);\n            })\n            .catch((error) => {\n                setMessage(error.message);\n            });\n    }\n\n    function crudTable() {\n        //mencoba me render data table, jika tidak ada data apapun untuk di render, maka return \"database kosong\"\n        try {\n            var crudTableHead = Object.keys(dbData[0]).map((key) => (\n                <th>{key}</th>\n            ));\n\n            var crudTableData = dbData.map((object) => (\n                <tr>\n                    {Object.keys(object).map((key) => (\n                        <td>{object[key]}</td>\n                    ))}\n                </tr>\n            ));\n        } catch (e) {\n            return <h3 className=\"text-danger padding\">Database kosong</h3>;\n        }\n\n        return (\n            <div className=\"crudTable\">\n                <table className=\"table\">\n                    <thead>\n                        <tr>{crudTableHead}</tr>\n                    </thead>\n                    <tbody>{crudTableData}</tbody>\n                </table>\n            </div>\n        );\n    }\n\n    useEffect(initialize, []);\n\n    return (\n        <>\n            <nav className=\"navbar navbar-default\">\n                <div className=\"container-fluid\">\n                    <div className=\"navbar-header\">\n                        <button\n                            type=\"button\"\n                            className=\"navbar-toggle collapsed\"\n                            data-toggle=\"collapse\"\n                            data-target=\"#bs-example-navbar-collapse-1\"\n                            aria-expanded=\"false\"\n                        >\n                            <span className=\"sr-only\">Toggle navigation</span>\n                            <span className=\"icon-bar\" />\n                            <span className=\"icon-bar\" />\n                            <span className=\"icon-bar\" />\n                        </button>\n                        <a className=\"navbar-brand\" href=\"#\">\n                            Home\n                        </a>\n                    </div>\n                    <div\n                        className=\"collapse navbar-collapse\"\n                        id=\"bs-example-navbar-collapse-1\"\n                    >\n                        <ul className=\"nav navbar-nav navbar-right\">\n                            <li>\n                                <Link to=\"/loginadmin\">Logout</Link>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n            <div className=\"container-fluid\">\n                {crudTable()}\n                {message}\n                {form()}\n            </div>\n        </>\n    );\n}\n","/home/alipw/Documents/ukk/spp-12/client/src/pages/Tes.js",["53","54","55","56"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function Tes() {\n    const [tableData, setTableData] = useState({});\n    const [referenceData, setReferenceData] = useState([]);\n\tconst [formData, setFormData] = useState({});\n\tconst [message, setMessage] = useState(\"\")\n\tconst tableName = \"pembayaran\";\n\t\n\tuseEffect(fetchData, []);\n\n    function fetchData() {\n        const token = localStorage.getItem(\"token\");\n        axios({\n            method: \"get\",\n            url: \"http://localhost:3001/api/crud/msc/tableinfo/\" + tableName,\n            headers: { Authorization: `Bearer ${token}` },\n        })\n            .then((response) => {\n                setReferenceData(response.data.reference_ids);\n                delete response.data[\"reference_ids\"];\n                setTableData(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n\t}\n\t\n\tfunction sendData() {\n        if(Object.keys(formData).length != Object.keys(tableData).length){\n            setMessage(\"data Incomplete\")\n            console.log(formData)\n        }\n        else{\n            const token = localStorage.getItem(\"token\");\n            axios({\n                method: \"post\",\n                data: formData,\n                url: \"http://localhost:3001/api/crud/\" + tableName,\n                headers: { Authorization: `Bearer ${token}` },\n            })\n                .then((response) => {\n\t\t\t\t\tmakeNull()\n                })\n                .catch((error) => {\n                    if(error.response){\n                        setMessage(error.response.data)\n                        console.log(\"error : \", error.response.data)\n                    }\n                });\n            }\n    }\n\n    function makeNull() {\n        Object.keys(tableData).map((key) => {\n\t\t\tif(tableData[key].references) formData[key] = referenceData[tableData[key].references.model][0]\n\t\t\telse formData[key] = \" \";\n        });\n        setFormData({ ...formData });\n    }\n\n    function form() {\n        var form = (\n            <div className=\"form-group col-sm-5\">\n                {Object.keys(tableData).map((key) => (\n                    <>\n                        <label> {key}</label>\n                        {tableData[key].references ? (\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tonChange={(ev) => {\n\t\t\t\t\t\t\t\t\tformData[key] = ev.target.value;\n\t\t\t\t\t\t\t\t\tsetFormData({ ...formData });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tvalue={formData[key]}\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{referenceData[\n\t\t\t\t\t\t\t\t\ttableData[key].references.model\n\t\t\t\t\t\t\t\t].map((value) => (\n\t\t\t\t\t\t\t\t\t<option>{value}</option>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</select>\n                        ) : (\n                            <input\n                                type=\"text\"\n                                onChange={(ev) => {\n                                    formData[key] = ev.target.value;\n                                    setFormData({ ...formData });\n                                }}\n                                value={formData[key]}\n                                className=\"form-control\"\n                            ></input>\n                        )}\n                    </>\n                ))}\n                <br />\n                <button className=\"btn btn-primary\" onClick={makeNull}>\n                    Make Null\n                </button>\n            </div>\n        );\n\n        return form;\n    }\n\n    return form();\n}\n","/home/alipw/Documents/ukk/spp-12/client/src/pages/History.js",["57","58","59","60","61","62","63","64","65","66"],"/home/alipw/Documents/ukk/spp-12/client/src/pages/HomeAdmin.js",["67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88"],"import React, { useState, useEffect } from \"react\";\nimport \"../styles/style.css\";\nimport { Redirect, useHistory, Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default function Home() {\n    const [tableName, setTableName] = useState(\"kelas\");\n    const [dbData, setDbData] = useState([{}]);\n    const [message, setMessage] = useState(\"\");\n    const [crudElement, setCrudElement] = useState(\"\");\n    const [update, setUpdate] = useState(false);\n    const [tableData, setTableData] = useState({});\n    const [referenceData, setReferenceData] = useState([]);\n    const [formData, setFormData] = useState({});\n    const [editData, setEditData] = useState({});\n    const [display, setDisplay] = useState(0);\n    const [curDisplay, setCurDisplay] = useState([\"none\", \"box\"])\n\n\t\n\tuseEffect(fetchTableData, [tableName], []);\n\n    function fetchTableData() {\n        const token = localStorage.getItem(\"token\");\n        axios({\n            method: \"get\",\n            url: \"http://localhost:3001/api/crud/msc/tableinfo/\" + tableName,\n            headers: { Authorization: `Bearer ${token}` },\n        })\n            .then((response) => {\n                setReferenceData(response.data.reference_ids);\n                delete response.data[\"reference_ids\"];\n                setTableData(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n\t}\n\t\n\tfunction sendData() {\n        if(Object.keys(formData).length != Object.keys(tableData).length){\n            setMessage(\"data Incomplete\")\n            console.log(formData)\n        }\n        else{\n            const token = localStorage.getItem(\"token\");\n            axios({\n                method: \"post\",\n                data: formData,\n                url: \"http://localhost:3001/api/crud/\" + tableName,\n                headers: { Authorization: `Bearer ${token}` },\n            })\n                .then((response) => {\n                    makeNull()\n                    setUpdate(!update)\n                })\n                .catch((error) => {\n                    if(error.response){\n                        setMessage(error.response.data)\n                        console.log(\"error : \", error.response)\n                    }\n                });\n            }\n    }\n\n    function makeNull() {\n        Object.keys(tableData).map((key) => {\n\t\t\tif(tableData[key].references) {\n                formData[key] = referenceData[tableData[key].references.model][0];\n            }\n\t\t\telse formData[key] = \"\";\n        });\n        setFormData({ ...formData });\n        console.log(formData)\n    }\n\n    function form() {\n        var form = \" \";\n        if(localStorage.level == \"admin\"){\n            try{\n                form = (\n                    <div className=\"form-group col-sm-5\">\n                        {Object.keys(tableData).map((key) => (\n                            <>\n                                <label> {key}</label>\n                                {tableData[key].references ? (\n                                    <select\n                                        onChange={(ev) => {\n                                            formData[key] = ev.target.value;\n                                            setFormData({ ...formData });\n                                        }}\n                                        value={formData[key]}\n                                        className=\"form-control\"\n                                    >\n                                        {referenceData[\n                                            tableData[key].references.model\n                                        ].map((value) => (\n                                            <option>{value}</option>\n                                        ))}\n                                    </select>\n                                ) : (\n                                    <input\n                                        type=\"text\"\n                                        onChange={(ev) => {\n                                            formData[key] = ev.target.value;\n                                            setFormData({ ...formData});\n                                        }}\n                                        value={formData[key]}\n                                        className=\"form-control\"\n                                    ></input>\n                                )}\n                            </>\n                        ))}\n                        <br />\n                        <button className=\"btn btn-primary\" onClick={sendData}>\n                            Insert\n                        </button>\n                    </div>\n                );\n            }catch(error){\n                <h1>an error has occured</h1>\n            }\n        }\n\n        return form;\n    }\n\n    let history = useHistory();\n\n\n    //fetch data for CRUD\n    function fetchData() {\n        if (\n            !localStorage.getItem(\"token\") &&\n            (localStorage.getItem(\"level\") != \"petugas\" ||\n                localStorage.getItem(\"level\") != \"admin\")\n        ) {\n            history.push(\"/loginadmin\");\n        }\n        const token = localStorage.getItem(\"token\");\n        setFormData({})\n        axios({\n            method: \"get\",\n            url: \"http://localhost:3001/api/crud/\" + tableName,\n            headers: { Authorization: `Bearer ${token}` },\n        })\n            .then((response) => {\n                setMessage(\"\");\n                setDbData(response.data);\n            })\n            .catch((error) => {\n                setMessage(error.message);\n                if ((error.response && error.response.status == 401)) {\n                    localStorage.clear();\n                    history.push(\"/loginadmin\");\n                }\n                \n\n            });\n    }\n\n    function updateData() {\n        makeNull()\n        setCrudElement(crudTable);\n    }\n\n    //lakukan request ke backend setiap kali tablename diganti atau dipaksa update oleh variabel update\n    useEffect(fetchData, [tableName, update], []);\n\n    //update isi table setiap kali ada perubahan di state dbData\n    useEffect(updateData, [dbData], []);\n\n    //fungsi menghapus data\n    function Drop(fieldname, id) {\n        const confirmed = window.confirm(\n            `Apakah anda yakin ingin menghapus data dengan ${fieldname} : ${id} ?`\n        );\n\n        var data_to_send = {\n            where_id: id,\n        };\n\n        if (confirmed) {\n            const token = localStorage.getItem(\"token\");\n            axios({\n                method: \"delete\",\n                data: data_to_send,\n                url: \"http://localhost:3001/api/crud/\" + tableName,\n                headers: { Authorization: `Bearer ${token}` },\n            })\n                .then(() => {\n                    setUpdate(!update);\n                })\n                .catch((error) => {\n                    if(error.response){\n                        console.log(error.response)\n                        setMessage(error.response.data);\n                    }\n                });\n        }\n    }\n\n    //render the crud table element\n    function crudTable() {\n        //mencoba me render data table, jika tidak ada data apapun untuk di render, maka return \"database kosong\"\n        try {\n            var crudTableHead = Object.keys(dbData[0]).map((key) => (\n                <th>{key}</th>\n            ));\n\n            var crudTableData = dbData.map((object) => (\n                <tr>\n                    {Object.keys(object).map((key) => (\n                        <td>{object[key]}</td>\n                    ))}\n                    <a\n                        className=\"btn btn-sm btn-danger btn-padding\"\n                        onClick={(ev) =>\n                            Drop(\n                                Object.keys(object)[0],\n                                object[Object.keys(object)[0]]\n                            )\n                        }\n                    >\n                        {\" \"}\n                        Delete{\" \"}\n                    </a>\n                </tr>\n            ));\n        } catch (e) {\n            return <h3 className=\"text-danger padding\">Database kosong</h3>;\n        }\n\n        return (\n            <div className=\"crudTable\">\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            {crudTableHead}\n                            <th colspan=\"2\">Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>{crudTableData}</tbody>\n                </table>\n            </div>\n        );\n    }\n\n    \n    return (\n        <>\n        <div>\n            <nav className=\"navbar navbar-default\">\n                <div className=\"container-fluid\">\n                    <div className=\"navbar-header\">\n                        <button\n                            type=\"button\"\n                            className=\"navbar-toggle collapsed\"\n                            data-toggle=\"collapse\"\n                            data-target=\"#bs-example-navbar-collapse-1\"\n                            aria-expanded=\"false\"\n                        >\n                            <span className=\"sr-only\">Toggle navigation</span>\n                            <span className=\"icon-bar\" />\n                            <span className=\"icon-bar\" />\n                            <span className=\"icon-bar\" />\n                        </button>\n                        <a className=\"navbar-brand\" href=\"#\">\n                            Home\n                        </a>\n                    </div>\n                    <div\n                        className=\"collapse navbar-collapse\"\n                        id=\"bs-example-navbar-collapse-1\"\n                    >\n                        <ul className=\"nav navbar-nav navbar-right\">\n                            <li>\n                                <Link to=\"/loginadmin\">Logout</Link>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n            <div className=\"container-fluid\">\n                <div onChange={(ev) => setTableName(ev.target.value)}>\n                    <label class=\"radio-inline\">\n                        <input\n                            type=\"radio\"\n                            name=\"inlineRadioOptions\"\n                            defaultChecked={tableName == \"kelas\"}\n                            value=\"kelas\"\n                        />{\" \"}\n                        Kelas\n                    </label>\n                    <label class=\"radio-inline\">\n                        <input\n                            type=\"radio\"\n                            name=\"inlineRadioOptions\"\n                            defaultChecked={tableName == \"pembayaran\"}\n                            value=\"pembayaran\"\n                        />{\" \"}\n                        Pembayaran\n                    </label>\n                    <label class=\"radio-inline\">\n                        <input\n                            type=\"radio\"\n                            name=\"inlineRadioOptions\"\n                            defaultChecked={tableName == \"petugas\"}\n                            value=\"petugas\"\n                        />{\" \"}\n                        Petugas\n                    </label>\n                    <label class=\"radio-inline\">\n                        <input\n                            type=\"radio\"\n                            name=\"inlineRadioOptions\"\n                            defaultChecked={tableName == \"siswa\"}\n                            value=\"siswa\"\n                        />{\" \"}\n                        Siswa\n                    </label>\n                    <label class=\"radio-inline\">\n                        <input\n                            type=\"radio\"\n                            name=\"inlineRadioOptions\"\n                            defaultChecked={tableName == \"spp\"}\n                            value=\"spp\"\n                        />{\" \"}\n                        SPP\n                    </label>\n                </div>\n                {crudElement}\n                <p className=\"text-danger\">{message}</p>\n                <br/>\n                {form()}\n            </div>\n            \n        </div>\n        </>\n    );\n}\n",{"ruleId":"89","severity":1,"message":"90","line":7,"column":5,"nodeType":"91","messageId":"92","endLine":7,"endColumn":9},{"ruleId":"89","severity":1,"message":"93","line":8,"column":5,"nodeType":"91","messageId":"92","endLine":8,"endColumn":15},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"89","severity":1,"message":"98","line":3,"column":10,"nodeType":"91","messageId":"92","endLine":3,"endColumn":18},{"ruleId":"89","severity":1,"message":"99","line":10,"column":12,"nodeType":"91","messageId":"92","endLine":10,"endColumn":20},{"ruleId":"89","severity":1,"message":"100","line":10,"column":22,"nodeType":"91","messageId":"92","endLine":10,"endColumn":33},{"ruleId":"89","severity":1,"message":"101","line":13,"column":19,"nodeType":"91","messageId":"92","endLine":13,"endColumn":27},{"ruleId":"102","severity":1,"message":"103","line":57,"column":8,"nodeType":"104","endLine":57,"endColumn":15,"suggestions":"105"},{"ruleId":"89","severity":1,"message":"98","line":3,"column":10,"nodeType":"91","messageId":"92","endLine":3,"endColumn":18},{"ruleId":"89","severity":1,"message":"106","line":13,"column":12,"nodeType":"91","messageId":"92","endLine":13,"endColumn":21},{"ruleId":"89","severity":1,"message":"107","line":13,"column":22,"nodeType":"91","messageId":"92","endLine":13,"endColumn":34},{"ruleId":"102","severity":1,"message":"108","line":19,"column":25,"nodeType":"104","endLine":19,"endColumn":36,"suggestions":"109"},{"ruleId":"102","severity":1,"message":"103","line":21,"column":27,"nodeType":"104","endLine":21,"endColumn":35,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":43,"column":41,"nodeType":"113","messageId":"114","endLine":43,"endColumn":43},{"ruleId":"115","severity":1,"message":"116","line":70,"column":42,"nodeType":"117","messageId":"118","endLine":70,"endColumn":44},{"ruleId":"102","severity":1,"message":"103","line":178,"column":27,"nodeType":"104","endLine":178,"endColumn":29,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":197,"column":25,"nodeType":"122","endLine":197,"endColumn":62},{"ruleId":"89","severity":1,"message":"123","line":8,"column":9,"nodeType":"91","messageId":"92","endLine":8,"endColumn":16},{"ruleId":"89","severity":1,"message":"124","line":30,"column":11,"nodeType":"91","messageId":"92","endLine":30,"endColumn":19},{"ruleId":"111","severity":1,"message":"112","line":31,"column":41,"nodeType":"113","messageId":"114","endLine":31,"endColumn":43},{"ruleId":"115","severity":1,"message":"116","line":56,"column":42,"nodeType":"117","messageId":"118","endLine":56,"endColumn":44},{"ruleId":"89","severity":1,"message":"98","line":3,"column":10,"nodeType":"91","messageId":"92","endLine":3,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":68,"column":27,"nodeType":"104","endLine":68,"endColumn":29,"suggestions":"125"},{"ruleId":"120","severity":1,"message":"121","line":87,"column":25,"nodeType":"122","endLine":87,"endColumn":62},{"ruleId":"120","severity":1,"message":"121","line":100,"column":33,"nodeType":"122","endLine":100,"endColumn":45},{"ruleId":"120","severity":1,"message":"121","line":103,"column":33,"nodeType":"122","endLine":110,"endColumn":34},{"ruleId":"120","severity":1,"message":"121","line":115,"column":41,"nodeType":"122","endLine":115,"endColumn":53},{"ruleId":"120","severity":1,"message":"121","line":118,"column":41,"nodeType":"122","endLine":118,"endColumn":53},{"ruleId":"120","severity":1,"message":"121","line":121,"column":41,"nodeType":"122","endLine":121,"endColumn":53},{"ruleId":"120","severity":1,"message":"121","line":125,"column":41,"nodeType":"122","endLine":125,"endColumn":53},{"ruleId":"120","severity":1,"message":"121","line":129,"column":41,"nodeType":"122","endLine":129,"endColumn":53},{"ruleId":"89","severity":1,"message":"98","line":3,"column":10,"nodeType":"91","messageId":"92","endLine":3,"endColumn":18},{"ruleId":"89","severity":1,"message":"126","line":15,"column":12,"nodeType":"91","messageId":"92","endLine":15,"endColumn":20},{"ruleId":"89","severity":1,"message":"127","line":15,"column":22,"nodeType":"91","messageId":"92","endLine":15,"endColumn":33},{"ruleId":"89","severity":1,"message":"128","line":16,"column":12,"nodeType":"91","messageId":"92","endLine":16,"endColumn":19},{"ruleId":"89","severity":1,"message":"129","line":16,"column":21,"nodeType":"91","messageId":"92","endLine":16,"endColumn":31},{"ruleId":"89","severity":1,"message":"130","line":17,"column":12,"nodeType":"91","messageId":"92","endLine":17,"endColumn":22},{"ruleId":"89","severity":1,"message":"131","line":17,"column":24,"nodeType":"91","messageId":"92","endLine":17,"endColumn":37},{"ruleId":"111","severity":1,"message":"112","line":40,"column":41,"nodeType":"113","messageId":"114","endLine":40,"endColumn":43},{"ruleId":"115","severity":1,"message":"116","line":66,"column":42,"nodeType":"117","messageId":"118","endLine":66,"endColumn":44},{"ruleId":"111","severity":1,"message":"132","line":78,"column":31,"nodeType":"113","messageId":"114","endLine":78,"endColumn":33},{"ruleId":"111","severity":1,"message":"112","line":134,"column":44,"nodeType":"113","messageId":"114","endLine":134,"endColumn":46},{"ruleId":"111","severity":1,"message":"112","line":135,"column":47,"nodeType":"113","messageId":"114","endLine":135,"endColumn":49},{"ruleId":"111","severity":1,"message":"132","line":152,"column":62,"nodeType":"113","messageId":"114","endLine":152,"endColumn":64},{"ruleId":"102","severity":1,"message":"103","line":167,"column":26,"nodeType":"104","endLine":167,"endColumn":45,"suggestions":"133"},{"ruleId":"102","severity":1,"message":"134","line":170,"column":27,"nodeType":"104","endLine":170,"endColumn":35,"suggestions":"135"},{"ruleId":"120","severity":1,"message":"136","line":215,"column":21,"nodeType":"122","endLine":223,"endColumn":22},{"ruleId":"120","severity":1,"message":"121","line":267,"column":25,"nodeType":"122","endLine":267,"endColumn":62},{"ruleId":"111","severity":1,"message":"132","line":289,"column":55,"nodeType":"113","messageId":"114","endLine":289,"endColumn":57},{"ruleId":"111","severity":1,"message":"132","line":298,"column":55,"nodeType":"113","messageId":"114","endLine":298,"endColumn":57},{"ruleId":"111","severity":1,"message":"132","line":307,"column":55,"nodeType":"113","messageId":"114","endLine":307,"endColumn":57},{"ruleId":"111","severity":1,"message":"132","line":316,"column":55,"nodeType":"113","messageId":"114","endLine":316,"endColumn":57},{"ruleId":"111","severity":1,"message":"132","line":325,"column":55,"nodeType":"113","messageId":"114","endLine":325,"endColumn":57},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","no-native-reassign",["137"],"no-negated-in-lhs",["138"],"'Redirect' is defined but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'setToken' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["139"],"'tableName' is assigned a value but never used.","'setTableName' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'formData' and 'referenceData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["140"],["141"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["142"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'message' is assigned a value but never used.","'sendData' is defined but never used.",["143"],"'editData' is assigned a value but never used.","'setEditData' is assigned a value but never used.","'display' is assigned a value but never used.","'setDisplay' is assigned a value but never used.","'curDisplay' is assigned a value but never used.","'setCurDisplay' is assigned a value but never used.","Expected '===' and instead saw '=='.",["144"],"React Hook useEffect has missing dependencies: 'crudTable' and 'makeNull'. Either include them or remove the dependency array.",["145"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"152","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: [history, token]",{"range":"159","text":"160"},"Update the dependencies array to be: [formData, referenceData, tableData]",{"range":"161","text":"162"},"Update the dependencies array to be: [history, update]",{"range":"163","text":"164"},"Update the dependencies array to be: [history]",{"range":"165","text":"166"},{"range":"167","text":"166"},"Update the dependencies array to be: [history, tableName, update]",{"range":"168","text":"169"},"Update the dependencies array to be: [crudTable, dbData, makeNull]",{"range":"170","text":"171"},[1794,1801],"[history, token]",[659,670],"[formData, referenceData, tableData]",[700,708],"[history, update]",[6304,6306],"[history]",[2094,2096],[6042,6061],"[history, tableName, update]",[6160,6168],"[crudTable, dbData, makeNull]"]